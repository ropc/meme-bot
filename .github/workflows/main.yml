# This is a basic workflow to help you get started with Actions

name: build-deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ropc/meme-bot:latest
  deploy:
    needs: docker-build-push
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4.0.0

    # this decrypts the ssh key and stores it in $HOME/secrets/githubaction-key.pem
    # maybe we should add a step to delete after deploying?
    - name: Decrypt ssh key
      env:
        SSH_KEY_PASSPHRASE: ${{ secrets.SSH_KEY_PASSPHRASE }}
        REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
      run: $GITHUB_WORKSPACE/.github/scripts/decrypt_secret.sh

    - name: Pull from host and deploy
      env:
        SSH_DESTINATION: ${{ secrets.SSH_DESTINATION }}
        REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
      run: ssh -oStrictHostKeyChecking=no -T -i $HOME/secrets/githubaction-key.pem $SSH_DESTINATION "cd $REMOTE_DIR && git pull -f && sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml pull && sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d"

    - name: cleanup
      env:
        SSH_DESTINATION: ${{ secrets.SSH_DESTINATION }}
        REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
      continue-on-error: true
      run: ssh -oStrictHostKeyChecking=no -T -i $HOME/secrets/githubaction-key.pem $SSH_DESTINATION "sudo docker system prune -f"
